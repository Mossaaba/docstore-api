services:
  docstore-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: docstore-api
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
      - PORT=8080
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/api/v1/documents",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - docstore-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=docstore-api,environment=development"
    labels:
      - "logging=promtail"
      - "service=docstore-api"
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: docstore-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../ssl:/etc/nginx/ssl:ro
    depends_on:
      - docstore-api
    restart: unless-stopped
    networks:
      - docstore-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=nginx,environment=development"
    labels:
      - "logging=promtail"
      - "service=nginx"
    profiles:
      - production

  # Loki for log aggregation (development)
  loki:
    image: grafana/loki:2.9.0
    container_name: docstore-loki-dev
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - docstore-network
    profiles:
      - monitoring

  # Promtail for log shipping (development)
  promtail:
    image: grafana/promtail:2.9.0
    container_name: docstore-promtail-dev
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - docstore-network
    depends_on:
      - loki
    profiles:
      - monitoring

  # Grafana for visualization (development)
  grafana:
    image: grafana/grafana:latest
    container_name: docstore-grafana-dev
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    restart: unless-stopped
    networks:
      - docstore-network
    depends_on:
      - loki
    profiles:
      - monitoring

networks:
  docstore-network:
    driver: bridge

# Optional: Add volumes for persistent data
volumes:
  docstore-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local
