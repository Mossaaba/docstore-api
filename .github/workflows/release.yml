name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run tests before release
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run tests
        run: |
          go mod download
          go test -v ./...
        working-directory: ./src

  build-binaries:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          binary_name="docstore-api-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            binary_name="${binary_name}.exe"
          fi
          go build -ldflags="-s -w" -o "dist/${binary_name}" ./src

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: dist/

  build-docker:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag
        id: tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/app.dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/docstore-api:${{ steps.tag.outputs.tag }}
            ghcr.io/${{ github.repository_owner }}/docstore-api:latest
            ghcr.io/${{ github.repository_owner }}/docstore-api:stable
          labels: |
            org.opencontainers.image.title=Document Store API
            org.opencontainers.image.description=RESTful document storage API built with Go
            org.opencontainers.image.version=${{ steps.tag.outputs.tag }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    needs: [build-binaries, build-docker]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: dist/

      - name: Extract tag
        id: tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        id: changelog
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # For manual releases, get commits since last tag
            LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
            if [ -n "$LAST_TAG" ]; then
              CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${LAST_TAG}..HEAD)
            else
              CHANGELOG=$(git log --pretty=format:"- %s (%h)" --max-count=10)
            fi
          else
            # For tag pushes, get commits since previous tag
            PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
            if [ -n "$PREV_TAG" ]; then
              CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${PREV_TAG}..HEAD)
            else
              CHANGELOG=$(git log --pretty=format:"- %s (%h)" --max-count=10)
            fi
          fi

          # Save changelog to file for multiline output
          echo "$CHANGELOG" > changelog.txt
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat changelog.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          body: |
            ## What's Changed
            ${{ steps.changelog.outputs.changelog }}

            ## Docker Images
            ```bash
            # Specific version
            docker pull ghcr.io/${{ github.repository_owner }}/docstore-api:${{ steps.tag.outputs.tag }}

            # Latest release
            docker pull ghcr.io/${{ github.repository_owner }}/docstore-api:latest

            # Stable version
            docker pull ghcr.io/${{ github.repository_owner }}/docstore-api:stable
            ```

            ## Installation
            Download the appropriate binary for your platform from the assets below.
          files: dist/*
          draft: false
          prerelease: false
