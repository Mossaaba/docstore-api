// Package main provides the Document Store API
// @title Document Store API
// @version 1.0
// @description A simple document storage API with CRUD operations
// @termsOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost
// @BasePath /api/v1
package main

import (
	"log"

	"docstore-api/src/controllers"
	_ "docstore-api/src/docs" // This will be generated by swag
	"docstore-api/src/models"
	"docstore-api/src/services"

	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

func main() {
	// Create layers: Model -> Service -> Controller
	store := models.NewDocumentStore()
	documentService := services.NewDocumentService(store)
	documentController := controllers.NewDocumentController(documentService)

	// Setup Gin router
	r := gin.Default()

	// API routes
	v1 := r.Group("/api/v1")
	{
		v1.POST("/documents", documentController.CreateDocument)
		v1.GET("/documents", documentController.ListDocuments)
		v1.GET("/documents/:id", documentController.GetDocument)
		v1.PUT("/documents/:id", documentController.UpdateDocument)
		v1.PATCH("/documents/:id", documentController.PartialUpdateDocument)
		v1.DELETE("/documents/:id", documentController.DeleteDocument)
	}

	// Swagger endpoint
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// Add some sample data
	sampleDocs := []models.Document{
		{
			ID:          "1",
			Name:        "Getting Started",
			Description: "A guide to getting started with the document store",
		},
		{
			ID:          "2",
			Name:        "API Reference",
			Description: "Complete API reference for document operations",
		},
	}

	for _, doc := range sampleDocs {
		if err := store.Create(doc); err != nil {
			log.Printf("Error creating sample document %s: %v", doc.ID, err)
		}
	}

	log.Println("Server starting on :8080")
	log.Println("Swagger UI available at: http://localhost:8080/swagger/index.html")

	if err := r.Run(":8080"); err != nil {
		log.Fatal("Failed to start server:", err)
	}
}
